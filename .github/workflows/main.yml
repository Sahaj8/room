name: Build_room

on:
    push:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [17.x]
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - name: Checkout
              uses: actions/checkout@v2.3.3

            # Cache node_modules for making builds a bit faster.
            - name: Cache node modules
              uses: actions/cache@v2.1.2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            # Install the Dependencies
            - name: Install Dependencies
              run: npm ci

            # Clean the build directory
            - name: Clean Distribution Directory
              run: npm run ci:clean

            # Run the Unit tests
            # - name: Run Unit Tests
              # run: npm run test

            # Fix Vulnerabilities
            - name: Fix Vulnerabilities
              run: npm audit fix --force

            # Build the Application
            - name: Build Application
              run: CI=false npm run build --prod

    docker:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            # Docker Login
            - name: Login to Docker
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

            - name: Build and Push to Dockerhub
              id: docker_build
              uses: docker/build-push-action@v2
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  tags: sahajv/spe_frontend_prod:latest

            - name: Image Digest
              run: echo ${{ steps.docker_build.outputs.digest }}

    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            # Deploy to Netlify
            - name: Deploy to Netlify
              uses: nwtgck/actions-netlify@v1.1
              with:
                  publish-dir: './build'
                  production-branch: version1
                  github-token: ${{ secrets.TOKEN_GITHUB }}
                  deploy-message: 'Deploy from GitHub Actions'
                  enable-pull-request-comment: false
                  enable-commit-comment: true
                  overwrites-pull-request-comment: true
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
              timeout-minutes: 1

    lighthouse:
        needs: deploy
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v2
          - name: Audit URLs using Lighthouse
            uses: treosh/lighthouse-ci-action@v7
            with:
              urls: https://room-allocation-ci-cd.netlify.app/
              # budgetPath: ./budget.json # test performance budgets
              uploadArtifacts: true # save results as an action artifacts
              temporaryPublicStorage: true # upload lighthouse report to the temporary storage